// Code generated by go-swagger; DO NOT EDIT.

package project_ops

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ez-deploy/apiserver/models"
)

// ProjectOpsCreateProjectOKCode is the HTTP code returned for type ProjectOpsCreateProjectOK
const ProjectOpsCreateProjectOKCode int = 200

/*ProjectOpsCreateProjectOK A successful response.

swagger:response projectOpsCreateProjectOK
*/
type ProjectOpsCreateProjectOK struct {

	/*
	  In: Body
	*/
	Payload *models.ModelCommonResp `json:"body,omitempty"`
}

// NewProjectOpsCreateProjectOK creates ProjectOpsCreateProjectOK with default headers values
func NewProjectOpsCreateProjectOK() *ProjectOpsCreateProjectOK {

	return &ProjectOpsCreateProjectOK{}
}

// WithPayload adds the payload to the project ops create project o k response
func (o *ProjectOpsCreateProjectOK) WithPayload(payload *models.ModelCommonResp) *ProjectOpsCreateProjectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the project ops create project o k response
func (o *ProjectOpsCreateProjectOK) SetPayload(payload *models.ModelCommonResp) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProjectOpsCreateProjectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ProjectOpsCreateProjectDefault An unexpected error response.

swagger:response projectOpsCreateProjectDefault
*/
type ProjectOpsCreateProjectDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GatewayruntimeError `json:"body,omitempty"`
}

// NewProjectOpsCreateProjectDefault creates ProjectOpsCreateProjectDefault with default headers values
func NewProjectOpsCreateProjectDefault(code int) *ProjectOpsCreateProjectDefault {
	if code <= 0 {
		code = 500
	}

	return &ProjectOpsCreateProjectDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the project ops create project default response
func (o *ProjectOpsCreateProjectDefault) WithStatusCode(code int) *ProjectOpsCreateProjectDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the project ops create project default response
func (o *ProjectOpsCreateProjectDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the project ops create project default response
func (o *ProjectOpsCreateProjectDefault) WithPayload(payload *models.GatewayruntimeError) *ProjectOpsCreateProjectDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the project ops create project default response
func (o *ProjectOpsCreateProjectDefault) SetPayload(payload *models.GatewayruntimeError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProjectOpsCreateProjectDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
